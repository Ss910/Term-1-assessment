# linear search: sequentially checks each element of the list until the target value is found or until all elements have been checked
# linear search (for)
def linear_search(A, target):
  for i in range(len(A)):
    if A[i] == target:
      return i
  return -1

data = [1, 4, 2, 5, 3]
print(linear_search(data, 3)) # output: 4
print(linear_search(data, 6)) # output: -1

# linear search (while)
def linear_search(A, target):
  i = 0
  while i < len(A):
    if A[i] == target:
      return i
    i += 1
  return -1

data = [1, 4, 2, 5, 3]
print(linear_search(data, 3)) # output: 4
print(linear_search(data, 6)) # output: -1

# linear search with duplicates (first occurance)
def linear_search(A, target):
  for i in range(len(A)):
    if A[i] == target:
      return i
  return -1

data = [1, 4, 2, 5, 2, 3]
print(linear_search(data, 2)) # output: 2
print(linear_search(data, 6)) # output: -1

# linear search with duplicates (last occurance)
def linear_search(A, target):
  for i in range(len(A) - 1, -1, -1):
    if A[i] == target:
      return i
  return -1

data = [1, 4, 2, 5, 2, 3]
print(linear_search(data, 2)) # output: 4
print(linear_search(data, 6)) # output: -1

# linear search with duplicates (all occurances)
def linear_search(A, target):
  results = []
  for i in range(len(A)):
    if A[i] == target:
      results.append(i)
  if results != []:
    return results
  else:
    return -1

data = [1, 4, 2, 5, 2, 3]
print(linear_search(data, 2)) # output: [2, 4]
print(linear_search(data, 6)) # output: -1
